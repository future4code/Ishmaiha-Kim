import { Request, Response } from "express";
import { IdGenerator } from "../services/IdGenerator";
import { user } from "../types";
import { createToken } from "../services/Authenticator";
import { userCriation } from "../data/createUserFunction";

export default async function createUser(
   req: Request,
   res: Response
): Promise<void> {
   try {
      const {email, password} = req.body

      if(!email || email.indexOf("@") === -1){
         throw new Error("Incorrect email. Please, check fields")
      }

      if(!password || password.length < 6 ){
         throw new Error ("Password must be 6 or more characters")
      }

      const idGenerator = new IdGenerator()
      const id: string = idGenerator.generateId()

      const newUser:user = {id, email, password}

      const token = createToken({id})

      await userCriation(id, newUser.email, newUser.password)

      res.status(200).send(`${token}: token generated by jwt`)


   } catch (error) {

      if (res.statusCode === 500) {
         res.status(500).send({ message: "Internal server error" })
      } else {
         res.send({ message: error.sqlMessage || error.message })
      }
   }
}














     